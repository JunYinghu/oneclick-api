<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hu.oneclick.dao.TestCaseTemplateJsonDAO">
  <resultMap id="BaseResultMap" type="com.hu.oneclick.model.entity.TestCaseTemplateJson">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="template_name" jdbcType="VARCHAR" property="templateName" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="del_flag" jdbcType="INTEGER" property="delFlag" />
    <result column="if_default" jdbcType="TINYINT" property="ifDefault" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.hu.oneclick.model.entity.TestCaseTemplateJson">
    <result column="json_content" jdbcType="LONGVARCHAR" property="jsonContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, template_name, user_id, del_flag, if_default, create_time, update_time
  </sql>
  <sql id="Blob_Column_List">
    json_content
  </sql>


<!--  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from test_case_template_json
    where id = #{id,jdbcType=INTEGER}
  </delete>-->

  <insert id="insertOne" keyColumn="id" keyProperty="id" parameterType="com.hu.oneclick.model.entity.TestCaseTemplateJson" useGeneratedKeys="true">
    insert into test_case_template_json (template_name, user_id, del_flag, 
      if_default, create_time, update_time, 
      json_content)
    values (#{templateName,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, #{delFlag,jdbcType=INTEGER}, 
      #{ifDefault,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{jsonContent,jdbcType=LONGVARCHAR})
  </insert>
 <!-- <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.hu.oneclick.model.entity.TestCaseTemplateJson" useGeneratedKeys="true">
    insert into test_case_template_json
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="templateName != null">
        template_name,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
      <if test="ifDefault != null">
        if_default,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="jsonContent != null">
        json_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="templateName != null">
        #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="ifDefault != null">
        #{ifDefault,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="jsonContent != null">
        #{jsonContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>-->

  <update id="updateByExampleSelective" parameterType="map">
    update test_case_template_json
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.templateName != null">
        template_name = #{record.templateName,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.delFlag != null">
        del_flag = #{record.delFlag,jdbcType=INTEGER},
      </if>
      <if test="record.ifDefault != null">
        if_default = #{record.ifDefault,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.jsonContent != null">
        json_content = #{record.jsonContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update test_case_template_json
    set id = #{record.id,jdbcType=INTEGER},
      template_name = #{record.templateName,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      del_flag = #{record.delFlag,jdbcType=INTEGER},
      if_default = #{record.ifDefault,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      json_content = #{record.jsonContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update test_case_template_json
    set id = #{record.id,jdbcType=INTEGER},
      template_name = #{record.templateName,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      del_flag = #{record.delFlag,jdbcType=INTEGER},
      if_default = #{record.ifDefault,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <!--<update id="updateByPrimaryKeySelective" parameterType="com.hu.oneclick.model.entity.TestCaseTemplateJson">
    update test_case_template_json
    <set>
      <if test="templateName != null">
        template_name = #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="ifDefault != null">
        if_default = #{ifDefault,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="jsonContent != null">
        json_content = #{jsonContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>-->
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hu.oneclick.model.entity.TestCaseTemplateJson">
    update test_case_template_json
    set template_name = #{templateName,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      del_flag = #{delFlag,jdbcType=INTEGER},
      if_default = #{ifDefault,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      json_content = #{jsonContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--<update id="updateByPrimaryKey" parameterType="com.hu.oneclick.model.entity.TestCaseTemplateJson">
    update test_case_template_json
    set template_name = #{templateName,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      del_flag = #{delFlag,jdbcType=INTEGER},
      if_default = #{ifDefault,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>-->

  <select id="queryByUserId"  resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from oneclick.test_case_template_json
    <where>
      (user_id = #{masterId}
      or if_default=1)
      and del_flag = 0
      order by create_time desc
    </where>
  </select>

  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from oneclick.test_case_template_json
    <where>
      id=#{id}
      and del_flag = 0
      order by create_time desc
    </where>
  </select>

  <update id="updateByPrimaryKeySelective">
    update test_case_template_json
    <set>
      <if test="templateName != null">
        template_name = #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="ifDefault != null">
        if_default = #{ifDefault,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="jsonContent != null">
        json_content = #{jsonContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
   where  id= #{id}
  </update>
</mapper>
